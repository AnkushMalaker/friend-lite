services:
  # FastAPI Speaker Recognition Service
  speaker-service:
    build:
      context: .
      dockerfile: Dockerfile
    image: speaker-recognition:latest
    ports:
      - "${SPEAKER_SERVICE_PORT:-8085}:${SPEAKER_SERVICE_PORT:-8085}"
    volumes:
      # Mount source code for development (live reload)
      - ./src:/app/src
      # Persist Hugging Face cache (models) between restarts
      - ./model_cache:/models
      - ./audio_chunks:/app/audio_chunks
      - ./debug:/app/debug
      # Persist speaker database (faiss.index + speakers.json)
      - ./speaker_data:/app/data
    deploy:
          resources:
            reservations:
              devices:
                - driver: nvidia
                  count: all
                  capabilities: [gpu]
    environment:
      - HF_HOME=/models
      - HF_TOKEN=${HF_TOKEN}
      - SIMILARITY_THRESHOLD=${SIMILARITY_THRESHOLD:-0.15}
      - SPEAKER_SERVICE_HOST=${SPEAKER_SERVICE_HOST:-0.0.0.0}
      - SPEAKER_SERVICE_PORT=${SPEAKER_SERVICE_PORT:-8085}
      - DEEPGRAM_API_KEY=${DEEPGRAM_API_KEY}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${SPEAKER_SERVICE_PORT:-8085}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  # React Web UI
  web-ui:
    build:
      context: webui
      dockerfile: Dockerfile
    ports:
      - "${REACT_UI_PORT:-5173}:5173"
    volumes:
      # Mount source code for development (live reload)
      - ./webui/src:/app/src
      - ./webui/public:/app/public
      - ./webui/package.json:/app/package.json
      - ./webui/vite.config.ts:/app/vite.config.ts
      - ./webui/tailwind.config.js:/app/tailwind.config.js
      - ./webui/postcss.config.js:/app/postcss.config.js
      - ./webui/tsconfig.json:/app/tsconfig.json
    environment:
      - VITE_API_URL=http://speaker-service:${SPEAKER_SERVICE_PORT:-8085}
      - REACT_UI_HOST=${REACT_UI_HOST:-0.0.0.0}
      - REACT_UI_PORT=${REACT_UI_PORT:-5173}
      - REACT_UI_HTTPS=${REACT_UI_HTTPS:-false}
      - SPEAKER_SERVICE_HOST=${SPEAKER_SERVICE_HOST:-speaker-service}
      - SPEAKER_SERVICE_PORT=${SPEAKER_SERVICE_PORT:-8085}
    depends_on:
      - speaker-service
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
