apiVersion: v1
kind: ServiceAccount
metadata:
  name: hostpath-provisioner
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hostpath-provisioner
rules:
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list", "watch", "create", "delete"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "update", "patch"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch", "create", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hostpath-provisioner
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hostpath-provisioner
subjects:
- kind: ServiceAccount
  name: hostpath-provisioner
  namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hostpath-provisioner
  namespace: kube-system
  labels:
    k8s-app: hostpath-provisioner
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hostpath-provisioner
  template:
    metadata:
      labels:
        k8s-app: hostpath-provisioner
    spec:
      serviceAccountName: hostpath-provisioner
      nodeSelector:
        kubernetes.io/hostname: anubis
      tolerations:
      - operator: "Exists"
      containers:
      - name: hostpath-provisioner
        image: k8s.gcr.io/sig-storage/hostpath-provisioner:v1.9.0
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: PROVISIONER_NAME
          value: microk8s.io/hostpath
        - name: PV_DIR
          value: /var/snap/microk8s/common/default-storage
        # Add tolerations for setup pods
        - name: JOB_CONTAINER_TOLERATIONS
          value: '[{"key":"gpu","operator":"Equal","value":"required","effect":"NoSchedule"}]'
        volumeMounts:
        - name: pv-volume
          mountPath: /var/snap/microk8s/common/default-storage
      volumes:
      - name: pv-volume
        hostPath:
          path: /var/snap/microk8s/common/default-storage
          type: DirectoryOrCreate
